{"version":3,"file":"static/js/113.5438a644.chunk.js","mappings":"8MAEaA,EAAYC,EAAAA,GAAAA,IAAU,0K,GASZA,EAAAA,GAAAA,IAAU,4GAOZA,EAAAA,GAAAA,GAAS,qIAGb,SAACC,GAAC,OAAKA,EAAEC,MAAMC,WAAWC,IAAI,I,kEC2C/C,EArDa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KACxB,GAA8BF,EAAAA,EAAAA,WAAS,GAAK,eAArCG,EAAO,KAAEC,EAAU,KAEpBC,GAAUC,EAAAA,EAAAA,cAAY,YAC1BC,EAAAA,EAAAA,MAAoBC,MAAK,SAACC,GACxBP,EAAUO,EAAUC,SACpBN,GAAW,EACb,GACF,GAAG,IAEH,GAAwCO,EAAAA,EAAAA,GAASN,GAAQ,eAAlDO,EAAS,KAAEC,EAAS,KAAEC,EAAO,KAMpC,OAJAC,EAAAA,EAAAA,YAAU,WACRH,GACF,GAAG,CAACA,IAEAC,GAAaV,GACR,SAACa,EAAA,EAAM,IAEZF,GACK,mCAGc,KAAb,OAANb,QAAM,IAANA,OAAM,EAANA,EAAQgB,SACH,SAACC,EAAA,EAAQ,CAACC,KAAK,mBAItB,UAACzB,EAAS,YAQR,SAAC0B,EAAA,EAAM,KACP,SAACC,EAAA,EAAG,CACFC,MAAM,qBACNC,SAAUC,EAAAA,EAAAA,sBACVC,YAAY,KAEd,SAACJ,EAAA,EAAG,CAACC,MAAM,eAAeC,SAAUC,EAAAA,EAAAA,iBACpC,SAACH,EAAA,EAAG,CAACC,MAAM,YAAYC,SAAUC,EAAAA,EAAAA,iBACjC,SAACH,EAAA,EAAG,CAACC,MAAM,gBAAgBC,SAAUC,EAAAA,EAAAA,qBACrC,SAACH,EAAA,EAAG,CAACC,MAAM,gBAAgBC,SAAUC,EAAAA,EAAAA,qBACrC,SAACH,EAAA,EAAG,CAACC,MAAM,gBAAgBC,SAAUC,EAAAA,EAAAA,qBACrC,SAACH,EAAA,EAAG,CAACC,MAAM,iBAAiBC,SAAUC,EAAAA,EAAAA,uBAG5C,C","sources":["pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  max-width: 1340px;\n  width: 100%;\n  margin: 0 auto;\n  /* padding: 20px; */\n`;\nexport const Gallery = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  gap: 26px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 38px;\n  line-height: 1.6;\n  font-weight: ${(p) => p.theme.fontWeight.bold};\n  margin-bottom: 20px;\n  text-align: center;\n`;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { getTrendingMovies } from \"../../services/api\";\nimport { Container, Title, Gallery } from \"./Home.styled\";\n// // import MovieCard from \"components/MovieCard/MovieCard\";\nimport { useFetch } from \"../../hooks/useFetch\";\nimport { NotFound } from \"../../components/NotFound/NotFound\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport Row from \"../../components/Row/Row\";\nimport requests from \"../../services/requests\";\nimport Banner from \"../../components/Banner/Banner\";\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const getData = useCallback(() => {\n    getTrendingMovies().then((resMovies) => {\n      setMovies(resMovies.results);\n      setLoading(false);\n    });\n  }, []);\n\n  const [fetchData, isLoading, isError] = useFetch(getData);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  if (isLoading || loading) {\n    return <Loader />;\n  }\n  if (isError) {\n    return <div>Error</div>;\n  }\n\n  if (movies?.length === 0) {\n    return <NotFound text=\"Nothing found\" />;\n  }\n\n  return (\n    <Container>\n      {/* <Title>Trending today</Title> */}\n      {/* <Gallery>\n        {movies?.map(({ title, id, poster_path }) => (\n          <MovieCard key={id} title={title} id={id} url={poster_path} />\n        ))}\n      </Gallery> */}\n\n      <Banner />\n      <Row\n        title=\"GOITFLIEX ORIGINAL\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow={true}\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Herror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n    </Container>\n  );\n};\n\nexport default Home;\n"],"names":["Container","styled","p","theme","fontWeight","bold","useState","movies","setMovies","loading","setLoading","getData","useCallback","getTrendingMovies","then","resMovies","results","useFetch","fetchData","isLoading","isError","useEffect","Loader","length","NotFound","text","Banner","Row","title","fetchUrl","requests","isLargeRow"],"sourceRoot":""}