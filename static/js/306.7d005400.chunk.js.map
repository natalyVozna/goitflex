{"version":3,"file":"static/js/306.7d005400.chunk.js","mappings":"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","sources":["components/CastCard/CastCard.styled.jsx","components/CastCard/CastCard.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/NotFound/NotFound.styled.jsx","components/NotFound/NotFound.jsx","hooks/useFetch.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: calc((100% - 130px) / 6);\n  justify-content: flex-start;\n  height: auto;\n\n  border: 1px solid rgb(0 0 0 / 10%);\n  box-shadow: 0 2px 8px rgba(216, 31, 38, 0.5);\n\n  border-radius: ${(p) => p.theme.space[2]}px;\n  transition: transform 250ms ${(props) => props.theme.colors.timingFunction};\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Cover = styled.img`\n  display: block;\n  width: 100%;\n  height: 225px;\n  object-fit: cover;\n  border-radius: ${(p) => p.theme.space[2]}px;\n`;\n\nexport const NavItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n  line-height: 1;\n  text-decoration: none;\n`;\nexport const Text = styled.p`\n  font-size: ${(p) => p.theme.fontSize.s}px;\n  line-height: 1.7;\n  font-weight: ${(p) => p.theme.fontWeight.bold};\n  padding: 0 5px;\n`;\n","import { Container, Cover, Text, NavItem } from './CastCard.styled';\nimport PropTypes from 'prop-types';\nimport defaultImg from '../../images/defaultImg.jpeg';\n\nexport const CastCard = ({ url, name, character, popularity }) => {\n  return (\n    <Container>\n      <NavItem>\n        <Cover\n          src={\n            url !== null\n              ? `https://image.tmdb.org/t/p/original/${url}`\n              : defaultImg\n          }\n          alt={name}\n        />\n      </NavItem>\n      <Text>{name}</Text>\n      <Text>{character}</Text>\n      <Text>Popularity: {Math.round(popularity)}%</Text>\n    </Container>\n  );\n};\n\nCastCard.propTypes = {\n  url: PropTypes.string,\n  name: PropTypes.string,\n  character: PropTypes.string,\n  popularity: PropTypes.number,\n};\n","import styled from \"styled-components\";\n\nexport const Gallery = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  gap: 26px;\n  max-width: 1340px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 10px 40px 40px;\n  color: ${(p) => p.theme.colors.white};\n`;\n","import { CastCard } from \"../../components/CastCard/CastCard\";\nimport { NotFound } from \"../../components/NotFound/NotFound\";\nimport { useFetch } from \"../../hooks/useFetch\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getActors } from \"../../services/api\";\nimport { Gallery } from \"./Cast.styled\";\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n\n  const getData = useCallback((params) => {\n    getActors(params).then((res) => {\n      setActors(res.cast);\n    });\n  }, []);\n\n  const [fetchData, isLoading, isError] = useFetch(getData);\n\n  useEffect(() => {\n    fetchData(movieId);\n  }, [fetchData, movieId]);\n\n  if (isLoading) {\n    return <div>Loading</div>;\n  }\n  if (isError) {\n    return <div>Error</div>;\n  }\n\n  if (!actors && !isLoading) {\n    const text = \"We don't have any actors\";\n    return <NotFound text={text} />;\n  }\n\n  return (\n    <Gallery>\n      {actors.map(({ profile_path, name, character, popularity, id }) => (\n        <CastCard\n          key={id}\n          url={profile_path}\n          name={name}\n          character={character}\n          popularity={popularity}\n        />\n      ))}\n    </Gallery>\n  );\n};\n\nexport default Cast;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  padding: 20px;\n  max-width: 1340px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.p`\n  font-size: 30px;\n  line-height: 1.6;\n  font-weight: ${(p) => p.theme.fontWeight.bold};\n  color: ${(p) => p.theme.colors.red};\n  margin-bottom: 20px;\n  /* text-align: center; */\n`;\n","import { Container, Title } from './NotFound.styled';\nexport const NotFound = ({ text = 'Not found' }) => {\n  return (\n    <Container>\n      <Title>{text}</Title>\n    </Container>\n  );\n};\n","import { useCallback, useState } from 'react';\n\nexport const useFetch = callback => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = useCallback(\n    async params => {\n      try {\n        setIsLoading(true);\n        await callback(params);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [callback]\n  );\n\n  return [fetchData, isLoading, isError];\n};\n","import axios from \"axios\";\n\nconst key = \"e9cee7be5a008a68e4280761266315f1\";\nconst fetchApi = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    // page: 1,\n  },\n});\n\nexport const getTrendingMovies = async (type = \"movie\", time = \"day\") => {\n  const { data } = await fetchApi.get(\n    `trending/${type}/${time}?api_key=${key}`\n  );\n\n  return data;\n};\nexport const getFullInfoAboutMovie = async (movie_id) => {\n  const { data } = await fetchApi.get(`movie/${movie_id}?api_key=${key}`);\n  return data;\n};\nexport const getMovieByQuery = async (params) => {\n  const { data } = await fetchApi.get(`search/movie?api_key=${key}`, {\n    params,\n  });\n\n  return data;\n};\nexport const getActors = async (movie_id) => {\n  const { data } = await fetchApi.get(\n    `movie/${movie_id}/credits?api_key=${key}`\n  );\n\n  return data;\n};\nexport const getReviews = async (movie_id) => {\n  const { data } = await fetchApi.get(\n    `movie/${movie_id}/reviews?api_key=${key}`\n  );\n\n  return data;\n};\n"],"names":["Container","styled","p","theme","space","props","colors","timingFunction","Cover","NavItem","Text","fontSize","s","fontWeight","bold","CastCard","url","name","character","popularity","src","defaultImg","alt","Math","round","Gallery","white","movieId","useParams","useState","actors","setActors","getData","useCallback","params","getActors","then","res","cast","useFetch","fetchData","isLoading","isError","useEffect","NotFound","text","map","profile_path","id","Title","red","callback","setIsError","setIsLoading","key","fetchApi","axios","baseURL","getTrendingMovies","type","time","get","data","getFullInfoAboutMovie","movie_id","getReviews"],"sourceRoot":""}