{"version":3,"file":"static/js/257.b5904ab5.chunk.js","mappings":"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","sources":["webpack://natflix/./src/components/Banner/Banner.module.css?ede8","components/Banner/Banner.styled.jsx","components/Banner/Banner.jsx","components/NotFound/NotFound.styled.jsx","components/NotFound/NotFound.jsx","hooks/useFetch.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js","services/axios.js","services/requests.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"banner\":\"Banner_banner__7KCUI\",\"banner__contents\":\"Banner_banner__contents__FSoPk\",\"banner__title\":\"Banner_banner__title__6qfui\",\"banner__buttons\":\"Banner_banner__buttons__-ERyP\",\"banner__button\":\"Banner_banner__button__U9kfz\",\"banner__descriptions\":\"Banner_banner__descriptions__TFz4F\",\"banner--fadeBottom\":\"Banner_banner--fadeBottom__L8uoX\"};","import styled from \"styled-components\";\n\nexport const BannerStyle = styled.section`\n  color: #ffffff;\n  object-fit: contain;\n  height: 448px;\n`;\nexport const Contents = styled.div`\n  margin-left: 20px;\n  padding-top: 140px;\n  height: 190px;\n`;\nexport const Title = styled.h1`\n  font-size: 3rem;\n  font-weight: 800;\n  padding-bottom: 0.3rem;\n\n  @media screen and (max-width: 480px) {\n    font-size: 2.5rem;\n  }\n`;\nexport const BannerButton = styled.button`\n  cursor: pointer;\n  color: #fff;\n  outline: none;\n  border: none;\n  font-weight: 700;\n  border-radius: 0.2vw;\n  padding: 0.5rem 2rem;\n  margin-right: 1rem;\n  background-color: rgba(51, 51, 51, 0.5);\n  transition: color 0.2s, background-color 0.2s;\n\n  @media screen and (max-width: 480px) {\n    padding: 0.3rem 1.7rem;\n  }\n\n  :hover {\n    color: #000;\n    background-color: #e6e6e6;\n  }\n`;\nexport const Descriptions = styled.p`\n  width: 45rem;\n  line-height: 1.3;\n  padding-top: 1rem;\n  font-size: 0.8rem;\n  max-width: 360px;\n  height: 80px;\n`;\nexport const FadeBottom = styled.div`\n  background-image: linear-gradient(\n    180deg,\n    transparent,\n    rgba(37, 37, 37, 0.61),\n    #111\n  );\n`;\n","import { useEffect, useState } from \"react\";\nimport instance from \"../../services/axios\";\nimport requests from \"../../services/requests\";\nimport css from \"./Banner.module.css\";\nimport {\n  BannerStyle,\n  Title,\n  Contents,\n  BannerButton,\n  Descriptions,\n} from \"./Banner.styled\";\n\nconst Banner = ({ movieId }) => {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovie() {\n      const request = movieId\n        ? requests.fetchMovieDetails(movieId)\n        : requests.fetchNetflixOriginals;\n\n      // const request = await instance.get(requests.fetchNetflixOriginals);\n      const result = await instance.get(request);\n      let randomNum = null;\n      if (!movieId) {\n        randomNum = Math.floor(Math.random() * result.data.results.length - 1);\n      }\n\n      setMovie(movieId ? result.data : result.data.results[randomNum]);\n      return request;\n    }\n\n    fetchMovie();\n  }, [movieId]);\n\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  return (\n    <BannerStyle\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\n            \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n        )`,\n        backgroundPosition: \"center\",\n      }}\n    >\n      <Contents>\n        <Title>{movie?.title || movie?.name || movie?.original_name}</Title>\n        <div>\n          <BannerButton className={css.banner__button}>Play</BannerButton>\n          <BannerButton className={css.banner__button}>My list</BannerButton>\n        </div>\n        <Descriptions>{truncate(movie?.overview, 150)}</Descriptions>\n      </Contents>\n\n      <div className={css[\"banner--fadeBottom\"]}></div>\n    </BannerStyle>\n  );\n};\n\nexport default Banner;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  padding: 20px;\n  max-width: 1340px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.p`\n  font-size: 30px;\n  line-height: 1.6;\n  font-weight: ${(p) => p.theme.fontWeight.bold};\n  color: ${(p) => p.theme.colors.red};\n  margin-bottom: 20px;\n  /* text-align: center; */\n`;\n","import { Container, Title } from './NotFound.styled';\nexport const NotFound = ({ text = 'Not found' }) => {\n  return (\n    <Container>\n      <Title>{text}</Title>\n    </Container>\n  );\n};\n","import { useCallback, useState } from 'react';\n\nexport const useFetch = callback => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = useCallback(\n    async params => {\n      try {\n        setIsLoading(true);\n        await callback(params);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [callback]\n  );\n\n  return [fetchData, isLoading, isError];\n};\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  max-width: 1340px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\n// export const SectionInfo = styled.section`\n//   position: relative;\n//   display: flex;\n//   padding: 20px 40px;\n//   align-items: center;\n//   background-image: linear-gradient(\n//       to right,\n//       rgba(47, 48, 58, 0.4),\n//       rgba(47, 48, 58, 0.4)\n//     ),\n//     url(${p => p.url});\n//   background-size: cover;\n//   background-repeat: no-repeat;\n//   min-height: 400px;\n//   color: ${p => p.theme.colors.white};\n// `;\nexport const GoBack = styled(NavLink)`\n  color: ${(p) => p.theme.colors.white};\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  position: absolute;\n  z-index: 10;\n  top: 3px;\n  left: 20px;\n  font-size: 16px;\n  font-weight: 700;\n  text-decoration: none;\n  border-radius: 0.2vw;\n  padding: 2px;\n  margin-right: 1rem;\n  background-color: rgba(51, 51, 51, 0.5);\n\n  &:hover {\n    color: ${(p) => p.theme.colors.text};\n    background-color: ${(p) => p.theme.colors.white};\n  }\n\n  @media screen and (max-width: 480px) {\n    font-size: 14px;\n  }\n`;\n\n// export const Cover = styled.div`\n//   color: ${(p) => p.theme.colors.white};\n//   background-color: transparent;\n//   border: none;\n//   height: 500px;\n//   display: flex;\n//   align-items: center;\n// `;\n// export const Img = styled.img`\n//   display: block;\n//   min-width: 300px;\n//   height: auto;\n//   border-width: 0px;\n//   outline: none;\n//   border-radius: 5px;\n// `;\n\n// export const InfoBox = styled.div`\n//   color: ${(p) => p.theme.colors.white};\n//   padding: ${(p) => p.theme.space[5]}px;\n//   font-size: ${(p) => p.theme.fontSize.m}px;\n//   font-weight: ${(p) => p.theme.fontWeight.normal};\n//   line-height: 1.6;\n// `;\n\nexport const Title = styled.h1`\n  font-size: ${(p) => p.theme.fontSize.l}px;\n  font-weight: ${(p) => p.theme.fontWeight.bold};\n  margin-bottom: 15px;\n`;\n// export const SubTitle = styled.h2`\n//   margin-bottom: 10px;\n// `;\n// export const Text = styled.p`\n//   margin-bottom: 20px;\n// `;\nexport const AdditionalSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  color: ${(p) => p.theme.colors.white};\n  padding: 20px 40px;\n  @media screen and (max-width: 480px) {\n    padding: 20px;\n  }\n`;\n\nexport const LinkBox = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const NavItem = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  padding: ${(p) => p.theme.space[2]}px;\n  border-radius: ${(p) => p.theme.space[2]}px;\n  font-size: 20px;\n  line-height: 1;\n  text-decoration: none;\n\n  &.active {\n    color: ${(p) => p.theme.colors.red};\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: ${(p) => p.theme.colors.red};\n  }\n`;\n","import { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport {\n  NavItem,\n  SectionInfo,\n  GoBack,\n  Img,\n  Container,\n  Cover,\n  InfoBox,\n  Title,\n  SubTitle,\n  Text,\n  AdditionalSection,\n  LinkBox,\n} from \"./MovieDetails.styled\";\nimport { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { getFullInfoAboutMovie } from \"../../services/api\";\nimport { useFetch } from \"../../hooks/useFetch\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport { NotFound } from \"../../components/NotFound/NotFound\";\nimport Banner from \"../../components/Banner/Banner\";\n\nconst navItems = [\n  { href: \"cast\", text: \"Cast\" },\n  { href: \"reviews\", text: \"Reviews\" },\n];\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const location = useLocation();\n\n  const getData = useCallback((params) => {\n    getFullInfoAboutMovie(params).then(\n      ({\n        title,\n        id,\n        poster_path: url,\n        vote_average,\n        overview,\n        genres,\n        backdrop_path,\n      }) => {\n        const score = Math.round(vote_average * 10);\n        const allGenres = genres.map((genre) => genre.name).join(\" \");\n        setMovie({\n          title,\n          id,\n          url,\n          score,\n          allGenres,\n          overview,\n          backdropUrl: backdrop_path,\n        });\n        setLoading(false);\n      }\n    );\n  }, []);\n\n  const [fetchData, isLoading, isError] = useFetch(getData);\n\n  useEffect(() => {\n    fetchData(movieId);\n  }, [fetchData, movieId]);\n\n  // if (isLoading || loading) {\n  //   return <Loader />;\n  // }\n  // if (isError) {\n  //   return <div>Error</div>;\n  // }\n\n  if (!movie && !loading) {\n    const text = \"No match\";\n    return <NotFound text={text} />;\n  }\n\n  return (\n    <Container>\n      <>\n        <GoBack to={location?.state ? location.state.from : \"/\"}>\n          &#8592; Go back\n        </GoBack>\n        {/* <SectionInfo\n          url={`https://image.tmdb.org/t/p/original/${movie.backdropUrl}`}\n        >\n          <GoBack to={location?.state ? location.state.from : \"/\"}>\n            &#8592; Go back\n          </GoBack>\n          <Cover>\n            <Img\n              src={`https://image.tmdb.org/t/p/original/${movie.url}`}\n              alt={movie.title}\n              width=\"200\"\n            />\n          </Cover>\n          <InfoBox>\n            <Title>{movie.title}</Title>\n            <Text>\n              <b>User Score:</b> {movie.score}%\n            </Text>\n            <SubTitle className=\"overview\">Overview</SubTitle>\n            <Text>{movie.overview}</Text>\n            <SubTitle className=\"genres\">Genres</SubTitle>\n            <p>{movie.allGenres}</p>\n          </InfoBox>\n        </SectionInfo> */}\n        <Banner movieId={movieId} />\n        <AdditionalSection className=\"additional\">\n          <Title>Additional information</Title>\n\n          <LinkBox>\n            {navItems.map(({ href, text }) => (\n              <NavItem to={href} key={href} state={location.state}>\n                &#10139; &nbsp;<span>{text}</span>\n              </NavItem>\n            ))}\n          </LinkBox>\n        </AdditionalSection>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import axios from \"axios\";\n\nconst key = \"e9cee7be5a008a68e4280761266315f1\";\nconst fetchApi = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    // page: 1,\n  },\n});\n\nexport const getTrendingMovies = async (type = \"movie\", time = \"day\") => {\n  const { data } = await fetchApi.get(\n    `trending/${type}/${time}?api_key=${key}`\n  );\n\n  return data;\n};\nexport const getFullInfoAboutMovie = async (movie_id) => {\n  const { data } = await fetchApi.get(`movie/${movie_id}?api_key=${key}`);\n  return data;\n};\nexport const getMovieByQuery = async (params) => {\n  const { data } = await fetchApi.get(`search/movie?api_key=${key}`, {\n    params,\n  });\n\n  return data;\n};\nexport const getActors = async (movie_id) => {\n  const { data } = await fetchApi.get(\n    `movie/${movie_id}/credits?api_key=${key}`\n  );\n\n  return data;\n};\nexport const getReviews = async (movie_id) => {\n  const { data } = await fetchApi.get(\n    `movie/${movie_id}/reviews?api_key=${key}`\n  );\n\n  return data;\n};\n","import axios from \"axios\";\n\n// base url to make requests to the movie database\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;\n","const API_KEY = \"e9cee7be5a008a68e4280761266315f1\";\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchTrendingMovies: `/trending/movie/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  searchMovies: (query) =>\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}`,\n  fetchMovieDetails: (movieId) =>\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n};\n\nexport default requests;\n"],"names":["BannerStyle","styled","Contents","Title","BannerButton","Descriptions","str","n","movieId","useState","movie","setMovie","useEffect","request","requests","instance","result","randomNum","Math","floor","random","data","results","length","fetchMovie","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","className","css","overview","substr","Container","p","theme","fontWeight","bold","colors","red","NotFound","text","useFetch","callback","isError","setIsError","isLoading","setIsLoading","fetchData","useCallback","params","GoBack","NavLink","white","fontSize","l","AdditionalSection","LinkBox","NavItem","space","navItems","href","useParams","loading","setLoading","location","useLocation","getData","getFullInfoAboutMovie","then","id","url","poster_path","vote_average","genres","score","round","allGenres","map","genre","join","backdropUrl","to","state","from","Banner","Suspense","fallback","Loader","key","fetchApi","axios","baseURL","getTrendingMovies","type","time","get","movie_id","getActors","getReviews","API_KEY","fetchTrending","fetchTrendingMovies","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","searchMovies","query","fetchMovieDetails"],"sourceRoot":""}