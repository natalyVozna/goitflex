{"version":3,"file":"static/js/387.961ae9ba.chunk.js","mappings":"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","sources":["components/NotFound/NotFound.styled.jsx","components/NotFound/NotFound.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","hooks/useFetch.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  padding: 20px;\n  max-width: 1340px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.p`\n  font-size: 30px;\n  line-height: 1.6;\n  font-weight: ${(p) => p.theme.fontWeight.bold};\n  color: ${(p) => p.theme.colors.red};\n  margin-bottom: 20px;\n  /* text-align: center; */\n`;\n","import { Container, Title } from './NotFound.styled';\nexport const NotFound = ({ text = 'Not found' }) => {\n  return (\n    <Container>\n      <Title>{text}</Title>\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  max-width: 1340px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 40px;\n  color: ${(p) => p.theme.colors.white};\n  @media screen and (max-width: 480px) {\n    padding: 30px 20px;\n  }\n`;\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 16px;\n  line-height: 1.4;\n  margin-bottom: 20px;\n  max-width: 100%;\n`;\n\nexport const Author = styled.span`\n  font-size: 22px;\n  line-height: 1.6;\n  font-weight: ${(p) => p.theme.fontWeight.bold};\n`;\nexport const Text = styled.p`\n  font-size: 16px;\n  line-height: 1.4;\n  padding-left: 10px;\n  @media screen and (max-width: 480px) {\n    font-size: 14px;\n  }\n`;\n","import { Loader } from \"../../components/Loader/Loader\";\nimport { NotFound } from \"../../components/NotFound/NotFound\";\nimport { useFetch } from \"../../hooks/useFetch\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReviews } from \"../../services/api\";\nimport { Container, Item, Author, Text } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getData = useCallback((params) => {\n    getReviews(params).then((res) => {\n      setReviews(res.results);\n      setLoading(false);\n    });\n  }, []);\n\n  const [fetchData, isLoading, isError] = useFetch(getData);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchData(movieId);\n  }, [fetchData, movieId]);\n\n  if (isLoading || loading) {\n    return <Loader />;\n  }\n  if (isError) {\n    return <div>Error</div>;\n  }\n\n  if (reviews.length === 0 && !loading) {\n    const text = \"We don't have any reviews\";\n    return <NotFound text={text} />;\n  }\n\n  return (\n    <Container>\n      {reviews.map(({ content, author, id }) => (\n        <Item key={id}>\n          <Author>&#10003; Autor: {author}</Author>\n          <Text>{content}</Text>\n        </Item>\n      ))}\n    </Container>\n  );\n};\n\nexport default Reviews;\n","import { useCallback, useState } from 'react';\n\nexport const useFetch = callback => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = useCallback(\n    async params => {\n      try {\n        setIsLoading(true);\n        await callback(params);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [callback]\n  );\n\n  return [fetchData, isLoading, isError];\n};\n","import axios from \"axios\";\n\nconst key = \"e9cee7be5a008a68e4280761266315f1\";\nconst fetchApi = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    // page: 1,\n  },\n});\n\nexport const getTrendingMovies = async (type = \"movie\", time = \"day\") => {\n  const { data } = await fetchApi.get(\n    `trending/${type}/${time}?api_key=${key}`\n  );\n\n  return data;\n};\nexport const getFullInfoAboutMovie = async (movie_id) => {\n  const { data } = await fetchApi.get(`movie/${movie_id}?api_key=${key}`);\n  return data;\n};\nexport const getMovieByQuery = async (params) => {\n  const { data } = await fetchApi.get(`search/movie?api_key=${key}`, {\n    params,\n  });\n\n  return data;\n};\nexport const getActors = async (movie_id) => {\n  const { data } = await fetchApi.get(\n    `movie/${movie_id}/credits?api_key=${key}`\n  );\n\n  return data;\n};\nexport const getReviews = async (movie_id) => {\n  const { data } = await fetchApi.get(\n    `movie/${movie_id}/reviews?api_key=${key}`\n  );\n\n  return data;\n};\n"],"names":["Container","styled","Title","p","theme","fontWeight","bold","colors","red","NotFound","text","white","Item","Author","Text","movieId","useParams","useState","reviews","setReviews","loading","setLoading","getData","useCallback","params","getReviews","then","res","results","useFetch","fetchData","isLoading","isError","useEffect","Loader","length","map","content","author","id","callback","setIsError","setIsLoading","key","fetchApi","axios","baseURL","getTrendingMovies","type","time","get","data","getFullInfoAboutMovie","movie_id","getActors"],"sourceRoot":""}